# Docker Compose for local development
# Copy this file to docker-compose.local.yml and fill in your local credentials
# NEVER commit docker-compose.local.yml to version control!

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: auction-postgres
    environment:
      POSTGRES_DB: auction_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_local_db_password_here
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./auction-system
      dockerfile: Dockerfile
    container_name: auction-backend
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: auction_db
      DB_USERNAME: postgres
      DB_PASSWORD: your_local_db_password_here
      
      # JWT Configuration
      JWT_SECRET: your_jwt_secret_here
      
      # CORS Configuration
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173
      
      # Email Configuration (optional)
      MAIL_USERNAME: your_email@gmail.com
      MAIL_PASSWORD: your_app_password_here
      
      # Upload directory
      UPLOAD_DIR: /app/uploads
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./auction-frontend
      dockerfile: Dockerfile
    container_name: auction-frontend
    ports:
      - "3000:80"
    environment:
      VITE_API_URL: http://localhost:8080/api
      VITE_WS_URL: http://localhost:8080
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:

